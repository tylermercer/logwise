name: Build Log Thing

on:
  # schedule:
  #   - cron: "0 15 * * *"
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      # - name: Determine whether to check for changed non-markdown files
      #   id: determine_mode
      #   run: |
      #     if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" || "${{ github.event_name }}" == "pull_request" ]]; then
      #       echo "mode=always" >> $GITHUB_OUTPUT
      #     else
      #       echo "mode=check" >> $GITHUB_OUTPUT
      #     fi

      # - name: Get changed files
      #   id: changed_files
      #   if: steps.determine_mode.outputs.mode == 'check'
      #   uses: tj-actions/changed-files@v41

      # - name: Check for non-Markdown files
      #   id: check_files
      #   if: steps.determine_mode.outputs.mode == 'check'
      #   run: |
      #     non_markdown_files=$(echo "${{ steps.changed_files.outputs.modified_files }}" | grep -v '\.md$' || true)
      #     echo "non_markdown_files=$non_markdown_files" >> $GITHUB_OUTPUT

      - name: Build site
        id: build_site
        # if: steps.determine_mode.outputs.mode == 'always' || steps.check_files.outputs.non_markdown_files != ''
        env:
          COMMIT_HASH: ${{ github.sha }}
          PUBLIC_DEXIE_CLOUD_URL: ${{ secrets.PUBLIC_DEXIE_CLOUD_URL }}
        run: |
          npm install
          npm run build
          echo "result=built" >> $GITHUB_OUTPUT

      - name: Extract variables
        id: extract_vars
        if: steps.build_site.outputs.result == 'built'
        run: | # branch_trunc is the branch truncated to 28 chars, which is the CF deploy preview subdomain length
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "datetime=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          branch_trunc=${branch:0:28}
          echo "branch=${branch}" >> $GITHUB_OUTPUT
          echo "branch_trunc=${branch_trunc}" >> $GITHUB_OUTPUT
      
      - name: Deploy to Cloudflare Pages
        id: deploy
        if: steps.build_site.outputs.result == 'built'
        run: npx wrangler pages deploy --branch=${{ steps.extract_vars.outputs.branch }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Add preview URL to pull request
        if: github.event_name == 'pull_request' && steps.build_site.outputs.result == 'built'
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: deploy_preview
          mode: recreate
          message: |
            ## Deployed to Cloudflare Pages! :rocket:

            | Name                    | Result |
            | ----------------------- | - |
            | **Preview URL**:        | https://${{ steps.extract_vars.outputs.branch }}.log-thing.pages.dev |
            | **Last commit:**        | `${{ steps.extract_vars.outputs.sha_short }}` |
            | **Deployed at**:        | `${{ steps.extract_vars.outputs.datetime }}` |
